{"version":3,"file":"js/app.52d7707c.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/messagesPersist.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/ChatGLMBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPI35Bot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/components/Messages/ChatMessage.vue","webpack://chatall/./src/components/Messages/ChatMessage.vue?e75c","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) ChatALL/1.18.13 Chrome/112.0.5615.165 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const context = await this.getChatContext();\n    if (context.requestParams.atValue) {\n      this.constructor._isAvailable = true;\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    if (this.getModelName())\n      return `${this.getBrandName()} (${this.getModelName()})`;\n    else return this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      onUpdateResponse(callbackParam, { content: err.toString(), done: true }); // Make sure stop loading\n    }\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    return false;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = store.getters.currentChat?.contexts?.[this.getClassname()];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport {\n  HumanChatMessage,\n  AIChatMessage,\n  SystemChatMessage,\n} from \"langchain/schema\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Convert the messages to the correct format\n    messages = messages.map((item) => {\n      if (item.type === \"human\") {\n        return new HumanChatMessage(item.data.content);\n      } else if (item.type === \"ai\") {\n        return new AIChatMessage(item.data.content);\n      } else if (item.type === \"system\") {\n        return new SystemChatMessage(item.data.content);\n      } else {\n        return item;\n      }\n    });\n\n    // Add the prompt to the messages\n    messages.push(new HumanChatMessage(prompt));\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          if (token) {\n            res += token;\n            onUpdateResponse(callbackParam, { content: res, done: false });\n          } else {\n            onUpdateResponse(callbackParam, { done: true });\n          }\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    messages.push(new AIChatMessage(res));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n\n    if (!token) {\n      this.constructor._isAvailable = false;\n    } else {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then((res) => {\n          this.constructor._isAvailable = true;\n          return res;\n        })\n        .catch((err) => {\n          this.constructor._isAvailable = false;\n          return err;\n        });\n    }\n\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        this.constructor._isAvailable = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n        this.constructor._isAvailable = false;\n      });\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(new Error(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        { firstQuery: \"ChatALL\" }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        this.constructor._isAvailable = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          this.constructor._isAvailable = true;\n        } else {\n          this.constructor._isAvailable = false;\n        }\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      this.constructor._isAvailable = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends Bot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      };\n      try {\n        const resp = await axios.post(\n          `https://aip.baidubce.com/oauth/2.0/token?client_id=${apiKey}&client_secret=${secretKey}&grant_type=client_credentials`,\n          {},\n          { headers },\n        );\n        this.accessToken = resp.data.access_token;\n        this.constructor._isAvailable = true;\n      } catch (e) {\n        console.error(e);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > store.state.wenxinQianfan.pastRounds * 2) {\n      messages.shift();\n    }\n\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      const url = `https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=${this.accessToken}`;\n\n      messages.push({ role: \"user\", content: `‘${prompt}’` });\n      const payload = JSON.stringify({\n        messages,\n        stream: true,\n        user: \"chatall\",\n      });\n\n      const requestConfig = {\n        headers,\n        method: \"POST\",\n        payload,\n      };\n\n      let fullResult = \"\";\n      return new Promise((resolve, reject) => {\n        const source = new SSE(url, requestConfig);\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data) {\n            const data = JSON.parse(event.data);\n            const partialResult = data.result;\n            fullResult += partialResult;\n            onUpdateResponse(callbackParam, {\n              content: fullResult,\n              done: data.is_end,\n            });\n\n            if (data.is_end) {\n              messages.push({ role: \"assistant\", content: fullResult });\n              this.setChatContext(messages);\n              source.close();\n              resolve();\n            }\n          } else {\n            // To capture random errors\n            console.error(\"Error Wenxin Qianfan:\", event);\n            const response = JSON.parse(event.source.xhr.responseText);\n            source.close();\n            reject(new Error(`${response.error_code} ${response.error_msg}`));\n          }\n        });\n        source.addEventListener(\"error\", (error) => {\n          const data = JSON.parse(error.data);\n          source.close();\n          reject(new Error(`${data.error_code} ${data.error_msg}`));\n        });\n        source.stream();\n      });\n    } catch (error) {\n      console.error(\"Error sending prompt to OpenAIAPI:\", error);\n      throw error;\n    }\n  }\n\n  async createChatContext() {\n    return [];\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super.checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    if (this.constructor._loginUrl === \"\") {\n      this.constructor._isAvailable = false;\n    } else {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        this.constructor._isAvailable = true;\n      } catch (err) {\n        console.log(err);\n        this.constructor._isAvailable = false;\n      }\n    }\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Create a conversation to test if the bot is available\n    const conversationId = await this.createChatContext();\n    if (conversationId) {\n      this.constructor._isAvailable = true;\n      // Delete the conversation after testing\n      axios.delete(\n        `https://huggingface.co/chat/conversation/${conversationId}`,\n      );\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable(); // Always return like this\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      parameters: {\n        temperature: 0.9,\n        truncate: 1000,\n        max_new_tokens: 1024,\n        stop: [\"</s>\"],\n        top_p: 0.95,\n        repetition_penalty: 1.2,\n        top_k: 50,\n        return_full_text: false,\n      },\n      stream: true,\n      options: {\n        id: uuidv4(),\n        is_retry: false,\n        use_cache: false,\n      },\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        const source = new SSE(\n          `https://huggingface.co/chat/conversation/${conversationId}`,\n          {\n            headers: { \"Content-Type\": \"application/json\" },\n            payload: JSON.stringify(this.packRequest(prompt)),\n          },\n        );\n\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.generated_text === null) {\n            text += data.token.text;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } else {\n            // the last message\n            onUpdateResponse(callbackParam, {\n              content: data.generated_text,\n              done: true,\n            });\n            source.close();\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n          reject(new Error(error.data.error));\n        });\n\n        source.stream();\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(\"https://huggingface.co/chat/conversation\", {\n        model: \"OpenAssistant/oasst-sft-6-llama-30b-xor\",\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return conversationId;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [9, 10]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (\n      !store.state.azureOpenaiApi.azureApiKey ||\n      !store.state.azureOpenaiApi.azureApiInstanceName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiDeploymentName ||\n      !store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n        azureOpenAIApiInstanceName:\n          store.state.azureOpenaiApi.azureApiInstanceName,\n        azureOpenAIApiDeploymentName:\n          store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n        azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n        temperature: store.state.azureOpenaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://www.bing.com/new\";\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.48\";\n\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.10.0 OS/MacIntel\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://www.bing.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.data && response.data.result.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature: response.data.conversationSignature,\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Bing Chat conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async checkAvailability() {\n    await axios\n      .get(\"https://www.bing.com/turing/conversation/chats\")\n      .then((response) => {\n        this.constructor._isAvailable =\n          response.data?.result?.value == \"Success\";\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        this.constructor._isAvailable = false;\n        console.error(\"Error checking Bing Chat login status:\", error);\n      });\n    return this.isAvailable();\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"winmuid2tf\",\n            \"0522chtsprs0\",\n            \"anssuptkmr1\",\n            \"522convqfs0\",\n            \"osbsdusgreccf\",\n            \"contansperf\",\n            \"mlchatpcth-c\",\n            \"winstmsg2tf\",\n            \"creatgoglc\",\n            \"creatorv2t\",\n            \"sydconfigoptt\",\n            \"norespwtf\",\n            \"0524txt3\",\n            \"517opinion\",\n            \"418dhlth\",\n            \"0518logos\",\n            \"517recansvg\",\n            \"525glv7s0\",\n            \"kcimgatt\",\n            \"427startpms0\",\n            \"515oscfing2s0\",\n          ],\n          isStartOfSession: context.invocationId === 0,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          requestId: uuid,\n          conversationSignature: context.conversationSignature,\n          participant: { id: context.clientId },\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        const wsp = new WebSocketAsPromised(\n          \"wss://sydney.bing.com/sydney/ChatHub\",\n          {\n            packMessage: (data) => {\n              return JSON.stringify(data) + seperator;\n            },\n            unpackMessage: (data) => {\n              return data\n                .toString()\n                .split(seperator)\n                .filter(Boolean)\n                .map((r) => JSON.parse(r));\n            },\n          },\n        );\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Bing Chat:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (await this.isAnonymous(context.clientId)) {\n                      const url = this.getLoginUrl();\n                      onUpdateResponse(callbackParam, {\n                        content: i18n.global.t(\"bingChat.loginToContinue\", {\n                          attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                        }),\n                        format: \"html\",\n                        done: false,\n                      });\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(new Error(event.item.result.message));\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Bing Chat response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) ChatALL/1.18.13 Chrome/112.0.5615.165 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async checkAvailability() {\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (response.data && response.data.accessToken) {\n        this.accessToken = response.data.accessToken;\n        this.constructor._isAvailable = true;\n      } else {\n        this.constructor._isAvailable = false;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n      this.constructor._isAvailable = false;\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(this.isAvailable());\n    return this.isAvailable();\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  getArkoseToken() {\n    let arkoseToken = void 0;\n    if (\n      this.constructor._model === \"gpt-4\" ||\n      this.constructor._model === \"gpt-4-browsing\"\n    ) {\n      let part1 = Math.floor(Math.random() * Math.pow(16, 16)).toString(16);\n      while (part1.length < 15) {\n        part1 = \"0\" + part1;\n      }\n      const part2 = (Math.random() * 10).toFixed(10);\n      arkoseToken = `${\n        part1 + part2\n      }|r=us-west-2|meta=3|meta_width=300|metabgclr=transparent|metaiconclr=%23555555|guitextcolor=%23000000|pk=35536E1E-65B4-4D96-9D97-6ADB7EFF8147|at=40|sup=1|rid=59|ag=101|cdn_url=https%3A%2F%2Ftcr9i.chat.openai.com%2Fcdn%2Ffc|lurl=https%3A%2F%2Faudio-us-west-2.arkoselabs.com|surl=https%3A%2F%2Ftcr9i.chat.openai.com|smurl=https%3A%2F%2Ftcr9i.chat.openai.com%2Fcdn%2Ffc%2Fassets%2Fstyle-manager`;\n    }\n    return arkoseToken;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message.id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async checkAvailability() {\n    if (!store.state.openaiApi.apiKey) {\n      this.constructor._isAvailable = false;\n    } else {\n      const chatModel = new ChatOpenAI({\n        openAIApiKey: store.state.openaiApi.apiKey,\n        modelName: this.constructor._model ? this.constructor._model : \"\",\n        temperature: store.state.openaiApi.temperature,\n        streaming: true,\n      });\n      this.constructor._chatModel = chatModel;\n      this.constructor._isAvailable = true;\n    }\n    return this.isAvailable();\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n\n  context = {\n    formkey: \"\",\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { formkey, settings } = this.context;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"WpuLMiXEKKE98j56k\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    let isAvailable = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude+\",\n      capybara: \"Sage\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      await axios.get(url).then((response) => {\n        if (response.request.responseURL !== url) {\n          // A 307 redirect to the login page means the bot is not logged in\n          // Axios always do the redirect, so we have to check the responseURL\n          return;\n        }\n\n        // Parse buildId\n        const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n        this.context.buildId = buildId[1];\n\n        // Parse chatId\n        const chatId = response.data.match(/\"chatId\":(\\d+),/);\n        this.context.chatId = chatId[1];\n\n        // Parse and run the secret code of Poe for formkey\n        const secretCode = response.data.match(\n          /var .=\".*\",.*window\\..*=function\\(\\)\\{return .\\.join\\(\"\"\\)\\};/,\n        );\n\n        const secretFunction = secretCode[0].match(\n          /(window\\..*)=function\\(\\)\\{.*\\};/,\n        );\n\n        this.context.formkey = eval(`${secretCode[0]}${secretFunction[1]}();`);\n\n        isAvailable = true;\n      });\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    this.constructor._isAvailable = isAvailable;\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from 'vue3-shortkey';\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\n// Init storage\nstore.commit(\"init\");\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components,\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme: defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          \"font\": \"#212121\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          \"font\": \"#fff\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","// store/messagesPersist.js\nimport VuexPersist from \"vuex-persist\";\n\nconst messagesPersist = new VuexPersist({\n  key: \"chatall-messages\",\n  storage: window.localStorage,\n  reducer: (state) => ({ messages: state.messages, chats: state.chats }), // Store only messages and chats\n});\n\nexport default messagesPersist;\n","import { createStore } from \"vuex\";\nimport VuexPersist from \"vuex-persist\";\nimport i18n from \"@/i18n\";\nimport messagesPersist from \"./messagesPersist\";\n\nconst getMatomo = function () {\n  return window.Piwik.getAsyncTracker();\n};\n\n// 初始化 VuexPersist 实例\nconst vuexPersist = new VuexPersist({\n  key: \"chatall-app\", // 用于存储的键名，可以根据你的应用更改\n  storage: window.localStorage, // 使用 localStorage，你还可以选择其他存储方式，如 sessionStorage\n  reducer: (state) => {\n    // eslint-disable-next-line\n    const { messages, chats, ...persistedState } = state;\n    return persistedState;\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    chats: [\n      {\n        title: \"New Chat\",\n        favBots: [\n          // default bots\n          { classname: \"ChatGPT35Bot\", selected: true },\n          { classname: \"ChatGPT4Bot\", selected: true },\n          { classname: \"ChatGPTBrowsingBot\", selected: true },\n          { classname: \"BingChatCreativeBot\", selected: true },\n          { classname: \"BingChatBalancedBot\", selected: true },\n          { classname: \"BingChatPreciseBot\", selected: true },\n          { classname: \"ChatGLMBot\", selected: true },\n          { classname: \"VicunaBot\", selected: true },\n          { classname: \"AlpacaBot\", selected: true },\n          { classname: \"ClaudeBot\", selected: true },\n        ],\n        contexts: {},\n        messages: [],\n      },\n    ],\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    // TODO: delete following fields\n    selectedBots: {},\n    messages: [],\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    setBotSelected(state, { botClassname, selected }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const bot = currentChat.favBots.find(\n        (bot) => bot.classname === botClassname,\n      );\n      if (bot) bot.selected = selected;\n      else currentChat.favBots.push({ classname: botClassname, selected });\n    },\n    addFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      if (favBots.find((bot) => bot.classname === botClassname) == undefined)\n        favBots.push({ classname: botClassname, selected: true });\n    },\n    removeFavoriteBot(state, botClassname) {\n      const currentChat = state.chats[state.currentChatIndex];\n      const favBots = currentChat.favBots;\n      const index = favBots.findIndex((bot) => bot.classname === botClassname);\n      favBots.splice(index, 1);\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    addMessage(state, message) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages.push(message);\n    },\n    updateMessage(state, { indexes, message }) {\n      const { chatIndex, messageIndex } = indexes;\n      const i = chatIndex == -1 ? state.currentChatIndex : chatIndex;\n      const chat = state.chats[i];\n      chat.messages[messageIndex] = {\n        ...chat.messages[messageIndex],\n        ...message,\n      };\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      if (currentChat.contexts == undefined) currentChat.contexts = {};\n      currentChat.contexts[botClassname] = context;\n    },\n    clearMessages(state) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.contexts = {};\n      currentChat.messages = [];\n    },\n    init(state) {\n      // Upgrade messages data structure\n      if (state.messages.length > 0) {\n        const chat = {\n          title: i18n.global.t(\"chat.newChat\"),\n          contexts: {},\n          messages: state.messages,\n        };\n        state.chats[0] = chat;\n        state.messages = [];\n      }\n      // Migrate to favorited bots\n      if (state.selectedBots) {\n        const bots = Object.keys(state.selectedBots);\n        state.chats[0].favBots = [];\n        for (const bot of bots) {\n          if (state.selectedBots[bot])\n            state.chats[0].favBots.push({ classname: bot, selected: true });\n        }\n        state.selectedBots = null;\n      }\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n  },\n  actions: {\n    sendPrompt({ commit, state, dispatch }, { prompt, bots }) {\n      commit(\"addMessage\", {\n        type: \"prompt\",\n        content: prompt,\n        done: true,\n        hide: false,\n      });\n\n      for (const bot of bots) {\n        const message = {\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          done: false,\n          highlight: false,\n          hide: false,\n          className: bot.getClassname(),\n        };\n\n        // workaround for tracking message position\n        const currentChat = state.chats[state.currentChatIndex];\n        message.index = currentChat.messages.push(message) - 1;\n\n        bot.sendPrompt(\n          prompt,\n          (indexes, values) =>\n            dispatch(\"updateMessage\", { indexes, message: values }),\n          { chatIndex: state.currentChatIndex, messageIndex: message.index },\n        );\n\n        getMatomo().trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          bot.getClassname(),\n          prompt.length,\n        );\n      }\n    },\n    updateMessage({ commit, state }, { indexes, message: values }) {\n      commit(\"updateMessage\", { indexes, message: values });\n\n      // workaround for notifing the message window to scroll to bottom\n      commit(\"incrementUpdateCounter\");\n\n      const i =\n        indexes.chatIndex == -1 ? state.currentChatIndex : indexes.chatIndex;\n      const chat = state.chats[i];\n      const message = { ...chat.messages[indexes.messageIndex], ...values };\n      if (values.done) {\n        getMatomo().trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n  },\n  getters: {\n    currentChat: (state) => {\n      if (state.chats.length === 0) {\n        return null;\n      }\n      return state.chats[state.currentChatIndex];\n    },\n  },\n  modules: {\n    // ...你的模块\n  },\n  plugins: [vuexPersist.plugin, messagesPersist.plugin], // 添加插件到 store\n});\n","import highlightDark from \"!css-loader!../node_modules/highlight.js/styles/github-dark.css\";\nimport highlightLight from \"!css-loader!../node_modules/highlight.js/styles/github.css\";\nimport markdownDark from \"!css-loader!../node_modules/github-markdown-css/github-markdown-dark.css\";\nimport markdownLight from \"!css-loader!../node_modules/github-markdown-css/github-markdown-light.css\";\n\nconst HIGHLIGHT_STYLE_ID = \"chatall-higlightjs\";\nconst MARKDOWN_STYLE_ID = \"chatall-markdown\";\n\nconst SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n\n  document\n    .querySelectorAll(`style#${MARKDOWN_STYLE_ID}, style#${HIGHLIGHT_STYLE_ID}`)\n    .forEach((e) => e.remove()); // remove previous style\n  addStyle(\n    HIGHLIGHT_STYLE_ID,\n    theme === Theme.DARK ? highlightDark : highlightLight,\n  );\n  addStyle(\n    MARKDOWN_STYLE_ID,\n    theme === Theme.DARK ? markdownDark : markdownLight,\n  );\n};\n\nconst addStyle = (id, css) => {\n  const style = document.createElement(\"style\");\n  style.id = id;\n  style.appendChild(document.createTextNode(css));\n  document.head.appendChild(style);\n};\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  if (window.Piwik) {\n    matomo.value = getMatomo();\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      if (window.Piwik) {\n        clearInterval(timer);\n        matomo.value = getMatomo();\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary darken-1\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn color=\"primary darken-1\" @click=\"close(true)\">{{\n          $t(\"header.yes\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\nimport i18n from \"@/i18n\";\nimport store from \"@/store\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async confirmBeforeUsing(confirmModal) {\n    if (\n      store.state.chatgpt.riskConfirmed ||\n      (this.constructor._model !== \"gpt-4\" &&\n        this.constructor._model !== \"gpt-4-browsing\")\n    )\n      return true;\n\n    const confirmed = await confirmModal.showModal(\n      i18n.global.t(\"chatGpt.riskWarningTitle\"),\n      i18n.global.t(\"chatGpt.riskWarningText\"),\n    );\n\n    store.state.chatgpt.riskConfirmed = confirmed;\n    return confirmed;\n  }\n\n  async checkAvailability() {\n    const reserved = this.constructor._isAvailable; // To supress the availablity changing\n    const isAvailable = await super.checkAvailability();\n    this.constructor._isAvailable = reserved;\n\n    if (isAvailable) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        this.constructor._isAvailable = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        this.constructor._isAvailable = false;\n      }\n    } else {\n      this.constructor._isAvailable = false;\n    }\n    return this.isAvailable();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3precise\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"galileo\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"glpromptv6\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"h3imaginative\",\n    \"cricketansgnd\",\n    \"autosave\",\n    \"knowimg\",\n    \"eiatrvlansgnd\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.png\"; // Place it in public/bots/\n  static _model = \"capybara\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-logo.jpeg\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLMBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.svg\"; // Place it in public/bots/\n  static _model = \"chatglm-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-v1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async checkAvailability() {\n    // Check:\n    // 1. Whether the bot is logged in as needed\n    // 2. Whether the bot settings are correct (e.g. API key is valid)\n    // If yes:\n    //   this.constructor._isAvailable = true;\n    // else:\n    //   this.constructor._isAvailable = false;\n\n    return this.isAvailable(); // Always return like this\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\nimport AsyncLock from \"async-lock\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AzureOpenAIAPIBot from \"./AzureOpenAIAPIBot\";\n\nexport default class AzureOpenAIAPI35Bot extends AzureOpenAIAPIBot {\n  static _className = \"AzureOpenAIAPI35Bot\";\n  static _logoFilename = \"openai-35-azure-logo.png\";\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/lmsys/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPI35Bot from \"./microsoft/AzureOpenAIAPI35Bot\";\n\nconst all = [\n  AlpacaBot.getInstance(),\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  MOSSBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  AzureOpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  QianWenBot.getInstance(),\n  SageBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  VicunaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n];\n\nconst disabled = [\n  ChatGPT4Bot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    const bot = disabled.find((bot) => bot.getClassname() === className);\n    if (bot) {\n      return bot;\n    } else {\n      return all.find((bot) => bot.getClassname() === className);\n    }\n  },\n  isBotDisabled(className) {\n    return disabled.some((bot) => bot.getClassname() === className);\n  },\n};\n\nexport default bots;\n","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      message.type,\n      message.highlight ? 'highlight-border' : '',\n    ]\"\n    :loading=\"message.done ? false : 'primary'\"\n  >\n    <v-card-title v-if=\"message.type === 'response'\" class=\"title\">\n      <img :src=\"botLogo\" alt=\"Bot Icon\" />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"message.highlight ? 'primary' : ''\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"copyToClipboard\">\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn flat size=\"x-small\" icon @click=\"hide\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </v-card-title>\n    <pre v-if=\"message.type === 'prompt'\">{{ message.content }}</pre>\n    <Markdown\n      v-else\n      class=\"markdown-body\"\n      :breaks=\"true\"\n      :html=\"message.format === 'html'\"\n      :source=\"message.content\"\n      @click=\"handleClick\"\n    />\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport { onMounted, ref, watch, computed } from \"vue\";\nimport i18n from \"@/i18n\";\nimport Markdown from \"vue3-markdown-it\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport bots from \"@/bots\";\n\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n});\n\nconst emits = defineEmits([\"update-message\"]);\n\nconst matomo = useMatomo();\n\nconst root = ref();\nconst confirmModal = ref(null);\n\nconst botLogo = computed(() => {\n  const bot = bots.getBotByClassName(props.message.className);\n  return bot ? bot.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  const bot = bots.getBotByClassName(props.message.className);\n  return bot ? bot.getFullname() : \"\";\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.message.content;\n  if (props.message.format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.message.className, 1);\n}\n\nfunction toggleHighlight() {\n  emits(\"update-message\", props.message.index, {\n    highlight: !props.message.highlight,\n  });\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.message.className,\n    props.message.highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    emits(\"update-message\", props.message.index, { hide: true });\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.message.className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n</script>\n\n<style scoped>\n.markdown-body{\n  background-color: rgb(var(--v-theme-response));\n  font-family: inherit;\n}\n\n.message {\n    border-radius: 8px;\n    padding: 16px;\n    word-wrap: break-word;\n    text-align: left;\n}\n\n.highlight-border {\n    box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n    background-color: rgb(var(--v-theme-prompt));\n    width: fit-content;\n    grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap; \n  font-family: inherit;\n}\n\n.response {\n    background-color: rgb(var(--v-theme-response));\n    width: 100%;\n    grid-column: auto / span 1;\n}\n\n.title {\n    display: flex;\n    align-items: center;\n    font-size: 1rem;\n    padding: 0;\n    margin-bottom: 8px;\n}\n\n.title img {\n    width: 20px;\n    height: 20px;\n    margin-right: 4px;\n}\n</style>\n","import script from \"./ChatMessage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessage.vue?vue&type=style&index=0&id=4a8185fc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a8185fc\"]])\n\nexport default __exports__","<template>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <chat-message\n        v-for=\"(message, index) in filteredMessages\"\n        :key=\"index\"\n        :columns=\"columns\"\n        :message=\"message\"\n        @update-message=\"updateMessage\"\n      ></chat-message>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatMessage from \"./ChatMessage.vue\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n});\n\nconst autoScroll = ref(true);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst filteredMessages = computed(() => {\n  return store.getters.currentChat.messages.filter((message) => !message.hide);\n});\n\nconst updateMessage = (index, values) => {\n  store.dispatch(\"updateMessage\", {\n    indexes: { chatIndex: store.state.currentChatIndex, messageIndex: index },\n    message: values,\n  });\n};\n\nconst scrollToBottom = ({ immediately = false }) => {\n  nextTick(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: immediately ? \"instant\" : \"smooth\",\n    });\n  });\n};\n\nconst autoScrollToBottom = () => {\n  if (autoScroll.value) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nwatch(() => store.getters.currentChat.messages.length, autoScrollToBottom);\nwatch(() => store.state.updateCounter, autoScrollToBottom);\n\nconst onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll.value =\n    scrollPosition >= document.documentElement.scrollHeight - 10;\n};\n\nonMounted(() => {\n  store.getters.currentChat.messages.forEach((message) => {\n    message.done = true;\n  });\n  window.addEventListener(\"scroll\", onScroll);\n  scrollToBottom({ immediately: true });\n});\nonUnmounted(() => {\n  window.removeEventListener(\"scroll\", onScroll);\n});\n</script>\n\n<style scoped>\n.messages {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    height: 100%;\n    overflow-y: auto;\n    gap: 16px;\n    margin: 52px 16px;\n}\n\n.message-grid {\n    display: grid;\n    grid-gap: 16px;\n    width: 100%;\n    padding: 16px;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=7f5b9a86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7f5b9a86\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card>\n      <v-toolbar dark color=\"primary\">\n        <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon dark @click=\"closeDialog\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-toolbar>\n      <v-list lines=\"two\" subheader>\n        <div class=\"section\">\n          <v-list-subheader>{{ $t(\"settings.general\") }}</v-list-subheader>\n          <v-list-item>\n            <v-list-item-title>{{ $t(\"settings.language\") }}</v-list-item-title>\n            <v-select\n              :items=\"languages\"\n              item-title=\"name\"\n              item-value=\"code\"\n              hide-details\n              :model-value=\"lang\"\n              @update:model-value=\"setCurrentLanguage($event)\"\n            ></v-select>\n          </v-list-item>\n        </div>\n        <div class=\"section\">\n          <v-list-item>\n            <v-list-item-title>{{ $t(\"settings.theme\") }}</v-list-item-title>\n            <v-select\n              :items=\"modes\"\n              item-title=\"name\"\n              item-value=\"code\"\n              hide-details\n              :model-value=\"currentMode\"\n              @update:model-value=\"setCurrentMode($event)\"\n            ></v-select>\n          </v-list-item>\n        </div>\n        <template v-for=\"(setting, index) in settings\" :key=\"index\">\n          <v-divider></v-divider>\n          <div class=\"section\">\n            <component :is=\"setting\"></component>\n          </div>\n        </template>\n      </v-list>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst settings = [\n  ChatGPTBotSettings,\n  OpenAIAPIBotSettings,\n  AzureOpenAIAPIBotSettings,\n  WenxinQianfanBotSettings,\n  GradioAppBotSettings,\n  BardBotSettings,\n  BingChatBotSettings,\n  HuggingChatBotSettings,\n  LMSYSBotSettings,\n  MOSSBotSettings,\n  PoeBotSettings,\n  QianWenBotSettings,\n  SparkBotSettings,\n  SkyWorkBotSettings,\n];\n\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n.section {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  padding: 0 16px;\n}\n\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=ef29ed5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ef29ed5a\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=015d9ed0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in bots.all\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nconst props = defineProps([\"favBots\"]);\n\nlet menu = ref(false);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n</script>\n\n<style>\n.bots-list {\n  column-count: 3\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=3f36ff9a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"footer\"\n    v-shortkey.once=\"['ctrl', 'k']\" \n    @shortkey=\"focusPromptTextarea\"\n  >\n    <v-textarea\n      v-model=\"prompt\"\n      ref=\"promptTextArea\"\n      auto-grow\n      max-rows=\"8.5\"\n      rows=\"1\"\n      density=\"comfortable\"\n      hide-details\n      variant=\"solo\"\n      :placeholder=\"$t('footer.promptPlaceholder')\"\n      autofocus\n      @keydown=\"filterEnterKey\"\n      style=\"min-width: 390px\"\n    ></v-textarea>\n    <v-btn\n      color=\"primary\"\n      elevation=\"2\"\n      class=\"margin-bottom\"\n      :disabled=\"\n        prompt.trim() === '' ||\n        favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n      \"\n      @click=\"sendPromptToBots\"\n    >\n      {{ $t(\"footer.sendPrompt\") }}\n    </v-btn>\n    <div class=\"bot-logos margin-bottom\">\n      <BotLogo\n        v-for=\"(bot, index) in favBots\"\n        :key=\"index\"\n        :bot=\"bot.instance\"\n        :active=\"activeBots[bot.classname]\"\n        size=\"36\"\n        @click=\"toggleSelected(bot.instance)\"\n        v-shortkey.once=\"['ctrl', `${index + 1}`]\"\n        @shortkey=\"toggleSelected(bot.instance)\" \n      />\n      <BotsMenu :favBots=\"favBots\" />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onBeforeMount, reactive, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst favBots = computed(() => {\n  const _favBots = [];\n  store.getters.currentChat.favBots.forEach((favBot) => {\n    if (_bots.isBotDisabled(favBot.classname)) return;\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots;\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.$el.querySelector('textarea').focus()\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n}\n\nfunction sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n</script>\n\n<style>\n.footer {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n}\n\n.margin-bottom {\n  margin-bottom: 5px;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=6e88ba3f&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: .2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0!important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: .5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=4054c33d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4054c33d\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey.once=\"['ctrl', 'f']\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: absolute;\n      right: 0;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 20px;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick(() => {\n    findTextRef.value.$el.querySelector(\"input\").focus();\n  });\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n</script>\n\n<style scoped>\n:deep() .v-field {\n    padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=6a0f82ac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a0f82ac\"]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n    <header>\n      <div class=\"header-content\">\n        <img\n          :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n          class=\"logo\"\n          src=\"@/assets/logo-banner.png\"\n          alt=\"ChatALL\"\n        />\n        <div class=\"column-icons\">\n          <img\n            src=\"@/assets/column-1.svg\"\n            @click=\"changeColumns(1)\"\n            @shortkey=\"changeColumns(1)\"\n            v-shortkey.once=\"['f1']\"\n            :class=\"{\n              selected: columns === 1,\n              'dark-png': store.state.theme === Theme.DARK,\n            }\"\n          />\n          <img\n            src=\"@/assets/column-2.svg\"\n            @click=\"changeColumns(2)\"\n            @shortkey=\"changeColumns(2)\"\n            v-shortkey.once=\"['f2']\"\n            :class=\"{\n              selected: columns === 2,\n              'dark-png': store.state.theme === Theme.DARK,\n            }\"\n          />\n          <img\n            src=\"@/assets/column-3.svg\"\n            @click=\"changeColumns(3)\"\n            @shortkey=\"changeColumns(3)\"\n            v-shortkey.once=\"['f3']\"\n            :class=\"{\n              selected: columns === 3,\n              'dark-png': store.state.theme === Theme.DARK,\n            }\"\n          />\n        </div>\n        <div>\n          <v-icon\n            class=\"cursor-pointer\"\n            color=\"primary\"\n            icon=\"mdi-broom\"\n            size=\"x-large\"\n            @click=\"clearMessages()\"\n          ></v-icon>\n          <v-icon\n            class=\"cursor-pointer\"\n            color=\"primary\"\n            icon=\"mdi-cog\"\n            size=\"x-large\"\n            @click=\"openSettingsModal()\"\n          ></v-icon>\n        </div>\n      </div>\n      <FindModal></FindModal>\n    </header>\n\n    <main class=\"content\">\n      <div id=\"content\">\n        <ChatMessages :columns=\"columns\"></ChatMessages>\n      </div>\n    </main>\n\n    <FooterBar></FooterBar>\n    <SettingsModal v-model:open=\"isSettingsOpen\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <UpdateNotification></UpdateNotification>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\n\nimport i18n from \"./i18n\";\n\n// Components\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst isSettingsOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) { // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  } \n  isSettingsOpen.value = true;\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n});\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: \"Arial\", sans-serif;\n}\n\n#app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\nheader {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background-color: rgb(var(--v-theme-header));\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n    padding: 16px;\n    z-index: 999;\n}\n\n.header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n    opacity: 0.5;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n    flex: 1;\n    background-color: rgb(var(--v-theme-background));\n    padding: 16px;\n}\n\n.cursor-pointer {\n    cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=735e13ae&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"azureOpenaiApi.azureOpenAIApiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiKey\"\n      outlined\n      dense\n      placeholder=\"b40...\"\n      @update:model-value=\"setAzureOpenaiApi({ azureApiKey: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"azureOpenaiApi.azureApiInstanceName\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureApiInstanceNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureApiInstanceName\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureApiInstanceName: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"azureOpenaiApi.azureOpenAIApiDeploymentName\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiDeploymentName\"\n      outlined\n      dense\n      @update:model-value=\"setAzureOpenaiApi({ azureOpenAIApiDeploymentName: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"azureOpenaiApi.azureOpenAIApiVersion\") }}</v-list-item-title>\n    <v-text-field\n      v-model=\"azureOpenaiApi.azureOpenAIApiVersion\"\n      outlined\n      dense\n      placeholder=\"2023-03-15-preview\"\n      @update:model-value=\"setAzureOpenaiApi({ azureOpenAIApiVersion: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"azureOpenaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"azureOpenaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setAzureOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"azureOpenaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setAzureOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"azureOpenaiApi.temperature0\"),\n        2: i18n.global.t(\"azureOpenaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setAzureOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"azureOpenaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=18cd0ffb\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=3ad7bb94\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=4509bce3\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title\n      ><span class=\"text-warning font-weight-bold\">{{\n        $t(\"settings.notice\")\n      }}</span></v-list-item-title\n    >\n    <v-list-item-subtitle>\n      <span class=\"text-warning font-weight-bold\">{{\n        $t(\"chatGpt.notice\")\n      }}</span>\n    </v-list-item-subtitle>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=d8abfc16\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"gradio.url\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{ $t(\"gradio.urlPrompt\") }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.url\"\n      outlined\n      dense\n      :placeholder=\"\n        $t('settings.forExample', {\n          example: 'https://*.hf.space, http://127.0.0.1:7861',\n        })\n      \"\n      @update:model-value=\"setGradio({ url: $event })\"\n    ></v-text-field>\n    <v-list-item-title>{{ $t(\"gradio.fnIndex\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"gradio.fnIndexPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"gradio.fnIndex\"\n      outlined\n      dense\n      placeholder=\"0\"\n      @update:model-value=\"setGradio({ fnIndex: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\n\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setGradio\"]),\n  },\n  computed: {\n    ...mapState([\"gradio\"]),\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=e79ef070\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=2957c662\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=9039312e\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=78c80a1c\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"openaiApi.apiKey\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.apiKey\"\n      outlined\n      dense\n      placeholder=\"sk-...\"\n      @update:model-value=\"setOpenaiApi({ apiKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"openaiApi.temperature\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.temperaturePrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.temperature\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"2\"\n      :step=\"0.1\"\n      thumb-label\n      show-ticks=\"always\"\n      :ticks=\"temperatureLabels\"\n      @update:model-value=\"setOpenaiApi({ temperature: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"openaiApi.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      @update:model-value=\"setOpenaiApi({ pastRounds: $event })\"\n    ></v-slider>\n\n    <v-list-item-title>{{ $t(\"openaiApi.alterUrl\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"openaiApi.alterUrlPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"openaiApi.alterUrl\"\n      outlined\n      dense\n      placeholder=\"https://your.proxy.com/v1/chat/completions\"\n      @update:model-value=\"setOpenaiApi({ alterUrl: $event })\"\n    ></v-text-field>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport i18n from \"@/i18n\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      temperatureLabels: {\n        0: i18n.global.t(\"openaiApi.temperature0\"),\n        2: i18n.global.t(\"openaiApi.temperature2\"),\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"setOpenaiApi\"]),\n  },\n  computed: {\n    ...mapState([\"openaiApi\"]),\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=592f38eb\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=7b2f91c3\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=c5646fa2\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=64da255b\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=ecf3a428\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-subheader>{{ bot.getBrandName() }}</v-list-subheader>\n  <v-list-item>\n    <v-list-item-title>API Key & Secret Key</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.secretPrompt\")\n    }}</v-list-item-subtitle>\n    <v-text-field\n      v-model=\"wenxinQianfan.apiKey\"\n      outlined\n      dense\n      hide-details\n      label=\"API Key\"\n      :placeholder=\"'2125NA8mQy7gC52Pq9BK3tvk'\"\n      @update:model-value=\"setWenxinQianfan({ apiKey: $event })\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"wenxinQianfan.secretKey\"\n      outlined\n      dense\n      label=\"Secret Key\"\n      :placeholder=\"'IWf2pyYm26fz8GgNAHdkPkznHgazlffQ'\"\n      @update:model-value=\"setWenxinQianfan({ secretKey: $event })\"\n    ></v-text-field>\n\n    <v-list-item-title>{{ $t(\"bot.pastRounds\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"bot.pastRoundsPrompt\")\n    }}</v-list-item-subtitle>\n    <v-slider\n      v-model=\"wenxinQianfan.pastRounds\"\n      color=\"primary\"\n      :min=\"0\"\n      :max=\"10\"\n      :step=\"1\"\n      thumb-label\n      show-ticks\n      hide-details\n      @update:model-value=\"setWenxinQianfan({ pastRounds: $event })\"\n    ></v-slider>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nexport default {\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setWenxinQianfan\"]),\n  },\n  computed: {\n    ...mapState([\"wenxinQianfan\"]),\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=ddb0c810\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 4621,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 4621,\n\t\"./BardBotSettings\": 7841,\n\t\"./BardBotSettings.vue\": 7841,\n\t\"./BingChatBotSettings\": 3324,\n\t\"./BingChatBotSettings.vue\": 3324,\n\t\"./ChatGPTBotSettings\": 2386,\n\t\"./ChatGPTBotSettings.vue\": 2386,\n\t\"./GradioAppBotSettings\": 5401,\n\t\"./GradioAppBotSettings.vue\": 5401,\n\t\"./HuggingChatBotSettings\": 750,\n\t\"./HuggingChatBotSettings.vue\": 750,\n\t\"./LMSYSBotSettings\": 5115,\n\t\"./LMSYSBotSettings.vue\": 5115,\n\t\"./LoginSetting\": 5562,\n\t\"./LoginSetting.vue\": 5562,\n\t\"./MOSSBotSettings\": 3795,\n\t\"./MOSSBotSettings.vue\": 3795,\n\t\"./OpenAIAPIBotSettings\": 6644,\n\t\"./OpenAIAPIBotSettings.vue\": 6644,\n\t\"./PoeBotSettings\": 544,\n\t\"./PoeBotSettings.vue\": 544,\n\t\"./QianWenBotSettings\": 4911,\n\t\"./QianWenBotSettings.vue\": 4911,\n\t\"./SkyWorkBotSettings\": 1399,\n\t\"./SkyWorkBotSettings.vue\": 1399,\n\t\"./SparkBotSettings\": 7361,\n\t\"./SparkBotSettings.vue\": 7361,\n\t\"./WenxinQianfanBotSettings\": 8350,\n\t\"./WenxinQianfanBotSettings.vue\": 8350\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 2124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 4621,\n\t\"./BardBotSettings.vue\": 7841,\n\t\"./BingChatBotSettings.vue\": 3324,\n\t\"./ChatGPTBotSettings.vue\": 2386,\n\t\"./GradioAppBotSettings.vue\": 5401,\n\t\"./HuggingChatBotSettings.vue\": 750,\n\t\"./LMSYSBotSettings.vue\": 5115,\n\t\"./LoginSetting.vue\": 5562,\n\t\"./MOSSBotSettings.vue\": 3795,\n\t\"./OpenAIAPIBotSettings.vue\": 6644,\n\t\"./PoeBotSettings.vue\": 544,\n\t\"./QianWenBotSettings.vue\": 4911,\n\t\"./SkyWorkBotSettings.vue\": 1399,\n\t\"./SparkBotSettings.vue\": 7361,\n\t\"./WenxinQianfanBotSettings.vue\": 8350\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 6912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = function() { return Promise.resolve(); };","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","async","context","this","getChatContext","requestParams","atValue","_isAvailable","isAvailable","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","content","done","catch","error","get","match","_defineProperty","AsyncLock","static","getLogo","_logoFilename","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","confirmModal","key","lockedFn","onLockUnavailable","self","_lock","acquire","ret","err","timeout","botName","executeSendPrompt","_sendPrompt","acquireLock","console","toString","createIfNotExists","store","getters","currentChat","contexts","createChatContext","setChatContext","commit","botClassname","LangChainBot","messages","length","getPastRounds","shift","map","item","type","HumanChatMessage","AIChatMessage","SystemChatMessage","push","res","_chatModel","callbacks","handleLLMNewToken","token","call","undefined","MOSSBot","getAuthHeader","state","moss","refresh","headers","Authorization","id","message","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","event","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","status","output","stage","status_code","onError","target","open","generateRandomId","randomStr","i","QianWenBot","getRequestHeaders","qianWen","xsrfToken","success","accept","payload","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","source","SSE","withCredentials","addEventListener","chunk","failed","errorCode","errorMsg","stopReason","stream","firstQuery","userId","SkyWorkBot","getAuthHeaders","skyWork","inviteToken","code","resp_data","busy_now","invite_token","checkAvailability","currentPrompt","messageId","currentMessageId","session_id","result_message","message_id","code_msg","setTimeout","dialogue","SparkBot","response","flag","desc","window","initGeeGuard","appId","https","gee_token","chatId","GtToken","getGtToken","formData","FormData","append","String","Date","slice","partialText","descr","Buffer","from","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","Accept","accessToken","access_token","e","pastRounds","role","user","requestConfig","method","fullResult","partialResult","result","is_end","xhr","responseText","error_code","error_msg","GradioAppBot","GradioBot","gradio","_fnIndexes","fnIndex","makeData","fn_index","Array","parseData","config","path","root","log","_sendFnIndex","session_hash","URL","protocol","msg","event_data","rank","rank_eta","parseError","onClose","substring","HuggingChatBot","conversationId","delete","packRequest","inputs","parameters","temperature","truncate","max_new_tokens","stop","top_p","repetition_penalty","top_k","return_full_text","options","uuidv4","is_retry","use_cache","generated_text","LMSYSBot","r","includes","AzureOpenAIAPIBot","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","chatModel","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","streaming","BingChatBot","conversation","value","clientId","conversationSignature","invocationId","uuid","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","isStartOfSession","timestamp","toISOString","author","inputMethod","messageType","requestId","tone","_tone","participant","seperator","fromCharCode","filter","Boolean","version","events","makePromptRequest","isAnonymous","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","ChatGPTBot","setRefreshCycle","chatgpt","refreshCycle","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","getArkoseToken","arkoseToken","part1","pow","part2","toFixed","arkose_token","content_type","parts","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","test","join","citations","metadata","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","OpenAIAPIBot","openaiApi","openAIApiKey","modelName","PoeBot","formkey","buildId","settings","lastMessageId","queryName","variables","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","responseURL","secretCode","secretFunction","eval","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","gqlPost","subscriptions","subscriptionName","query","queryHash","debug","min_seq","m","message_type","messageAdded","bot","withChatBreak","messageEdgeCreate","errors","lang","navigator","language","userLanguage","substr","en","enMessages","zh","zhMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","ipcRenderer","require","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","dark","fetch","script","document","createElement","head","appendChild","createApp","App","use","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","messagesPersist","VuexPersist","storage","localStorage","reducer","chats","getMatomo","Piwik","getAsyncTracker","vuexPersist","persistedState","createStore","columns","alterUrl","riskConfirmed","favBots","classname","selected","currentChatIndex","updateCounter","selectedBots","mutations","changeColumns","n","setUuid","setBotSelected","find","addFavoriteBot","removeFavoriteBot","index","findIndex","splice","setCurrentLanguage","setChatgpt","setOpenaiApi","values","setAzureOpenaiApi","setMoss","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","addMessage","updateMessage","indexes","chatIndex","messageIndex","chat","setMessages","incrementUpdateCounter","clearMessages","init","bots","keys","setTheme","setMode","actions","sendPrompt","dispatch","hide","highlight","className","trackEvent","modules","plugins","plugin","HIGHLIGHT_STYLE_ID","MARKDOWN_STYLE_ID","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","invoke","shouldUseDarkColors","vuetifyTheme","name","querySelectorAll","remove","addStyle","highlightDark","highlightLight","markdownDark","markdownLight","css","style","createTextNode","useMatomo","matomo","ref","start","now","timer","onUnmounted","dialog","_title","_text","showModal","__expose","__exports__","ChatGPT35Bot","ChatGPT4Bot","confirmed","reserved","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","OpenAIAPI35Bot","OpenAIAPI4Bot","VicunaBot","ChatGLMBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","AzureOpenAIAPI35Bot","all","getInstance","disabled","getBotByClassName","isBotDisabled","some","botLogo","computed","props","botFullname","copyToClipboard","clipboard","writeText","toggleHighlight","emits","handleClick","tagName","parentElement","preventDefault","electron","href","shell","openExternal","watch","$el","setProperty","onMounted","useStore","autoScroll","gridTemplateColumns","filteredMessages","scrollToBottom","immediately","nextTick","scrollTo","top","documentElement","scrollHeight","behavior","autoScrollToBottom","onScroll","scrollPosition","pageYOffset","innerHeight","removeEventListener","$t","useTheme","ChatGPTBotSettings","OpenAIAPIBotSettings","AzureOpenAIAPIBotSettings","WenxinQianfanBotSettings","GradioAppBotSettings","BardBotSettings","BingChatBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","PoeBotSettings","QianWenBotSettings","SparkBotSettings","SkyWorkBotSettings","languages","modes","currentMode","setCurrentMode","closeDialog","emit","botSettings","newBot","markRaw","getSettingsComponent","onDone","menu","favorited","toggleFavorite","promptTextArea","_bots","activeBots","reactive","_favBots","favBot","instance","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmBeforeUsing","focusPromptTextarea","focus","filterEnterKey","keyCode","shiftKey","ctrlKey","altKey","metaKey","sendPromptToBots","trim","toBots","toggleSelected","availability","newValue","oldValue","botsToCheck","oldBot","onBeforeMount","on","versions","snackbar","checkVersion","getItem","latest","current","compare","skip","removeListener","setItem","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","formRef","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","validate","onUpdatedSystemTheme","isSettingsOpen","openSettingsModal","_paq","ver","_createVNode","_component_v_list_subheader","$data","_component_v_list_item","_component_v_list_item_title","_ctx","_component_v_list_item_subtitle","_component_v_text_field","$event","outlined","dense","_component_v_slider","color","min","max","step","ticks","temperatureLabels","methods","mapMutations","mapState","render","_component_login_setting","LoginSetting","class","_createElementVNode","_hoisted_1","_toDisplayString","_hoisted_2","_component_v_checkbox","$options","autoRefresh","hideDetails","label","AUTO_REFRESH_CYCLE","set","auto","_createBlock","$props","onClick","_cache","args","openLoginWindow","loginUrl","userAgent","mounted","secret","webpackAsyncContext","req","__webpack_require__","o","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","d","fn","wrapDeps","deps","dep","obj","a","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","getResult","fnQueue","q","has","add","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","toStringTag","nmd","paths","children","p","b","baseURI","location","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}